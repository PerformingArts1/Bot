{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid103\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AI Chatbot for Performing Arts Center (iPad Frontend)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 This project develops a sophisticated, voice-first AI chatbot designed to enhance interaction and information access, particularly envisioned for a performing arts center. The system leverages a powerful local AI backend on a Mac Mini M4 Max, with a responsive React web application serving as the user interface, accessible directly from an iPad.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u55357 \u56960  Features\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Voice-First Interaction:
\f1\b0  Engage with the chatbot using natural language voice commands.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Intelligent Responses:
\f1\b0  Powered by advanced Large Language Models (LLMs) for comprehensive and contextually relevant answers.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Retrieval Augmented Generation (RAG):
\f1\b0  Integrates with a knowledge base (documents, videos) to provide accurate, grounded information from specific sources.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multimodal Input (Conceptual):
\f1\b0  Capable of processing image and video content for richer understanding (backend-dependent).\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Text-to-Speech (TTS):
\f1\b0  Delivers AI responses audibly for a natural conversational flow.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Document & Video Ingestion:
\f1\b0  Easily upload PDFs, text files, and videos to expand the chatbot's knowledge base.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Local Processing:
\f1\b0  All heavy AI computations (ASR, RAG, LLM, TTS) are performed locally on your Mac Mini, ensuring privacy and potentially lower latency.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 iPad Optimized Frontend:
\f1\b0  A responsive web application designed for touch interaction on an iPad, with Progressive Web App (PWA) capabilities for an app-like experience.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u55358 \u56800  Architecture Overview\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 The system follows a client-server architecture:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend Server (Mac Mini M4 Max):
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls2\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Flask Application:
\f1\b0  Manages API endpoints for chat interactions, document/video uploads, and system status.\
\ls2\ilvl1
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AI Core:
\f1\b0  Hosts and orchestrates the AI models:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa240\partightenfactor0
\ls2\ilvl2
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LLM:
\f1\b0  For generating human-like text responses.\
\ls2\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Embedding Model:
\f1\b0  For creating vector representations of text.\
\ls2\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Vector Database (ChromaDB):
\f1\b0  Stores vector embeddings for semantic search (RAG).\
\ls2\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keyword Index (Whoosh):
\f1\b0  Provides fast keyword-based search (RAG).\
\ls2\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ASR (Faster-Whisper):
\f1\b0  Transcribes spoken language to text.\
\ls2\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TTS (e.g., gTTS/local engine):
\f1\b0  Converts text responses back into speech.\
\ls2\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Document Parsers:
\f1\b0  Handles various file types (PDFs, text, images, videos) for ingestion.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls2\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Celery:
\f1\b0  An asynchronous task queue to offload long-running processes (like document ingestion) from the main Flask application, keeping the API responsive.\
\ls2\ilvl1
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Simple HTTP Server:
\f1\b0  Serves the React frontend's static files.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Frontend Client (iPad):
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls2\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Safari Browser / PWA:
\f1\b0  Accesses the React web application served from the Mac Mini.\
\ls2\ilvl1
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 React Application:
\f1\b0  Provides the user interface, handles voice input via the iPad's microphone, displays chat messages, and manages file uploads.\
\ls2\ilvl1
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Communication:
\f1\b0  Interacts with the Mac Mini backend via HTTP requests over the local network.\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 graph TD\
    A[iPad Client] -- HTTP/HTTPS --> B[Mac Mini (Local Network)]\
\
    subgraph B\
        C[React Frontend (Served by HTTP Server)]\
        D[Flask Backend (API)]\
        E[Celery Workers]\
        F[Ollama (LLM)]\
        G[Sentence-Transformers (Embeddings)]\
        H[ChromaDB]\
        I[Whoosh Index]\
        J[Faster-Whisper (ASR)]\
        K[TTS Engine]\
        L[Document Parsers]\
    end\
\
    A -- Displays UI, Captures Voice/Text, Uploads Files --> C\
    C -- API Requests (Chat, Uploads) --> D\
    D -- Offloads Heavy Tasks --> E\
    D -- Interacts with --> F & G & H & I & J & K & L\
    E -- Processes Ingestion, Updates H & I --> D\
    D -- Sends Text/Audio Response --> C\
    C -- Renders Response, Plays Audio --> A\
\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u55357 \u56523  Prerequisites\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 On Your Mac Mini M4 Max:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Python 3.9+:
\f1\b0  Recommended for modern features and compatibility.\
\ls3\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Node.js & npm:
\f1\b0  For building the React frontend.\
\ls3\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ollama:
\f1\b0  Installed and running with your chosen LLM and embedding models (e.g., 
\f2\fs26 llama2
\f1\fs24 , 
\f2\fs26 nomic-embed-text
\f1\fs24 ).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls3\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Download Ollama: {\field{\*\fldinst{HYPERLINK "https://ollama.com/"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 https://ollama.com/}}\
\ls3\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pull models: 
\f2\fs26 ollama pull llama2
\f1\fs24 , 
\f2\fs26 ollama pull nomic-embed-text
\f1\fs24  (or your preferred models).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Redis:
\f1\b0  Required for Celery as a message broker. You can install it via Homebrew: 
\f2\fs26 brew install redis
\f1\fs24 .\
\ls3\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 System Dependencies:
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls3\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 tesseract-ocr
\f1\fs24 : For OCR in PDF/image processing. 
\f2\fs26 brew install tesseract
\f1\fs24 \
\ls3\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ghostscript
\f1\fs24 : For PDF processing. 
\f2\fs26 brew install ghostscript
\f1\fs24 \
\ls3\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ffmpeg
\f1\fs24 : For video and audio processing. 
\f2\fs26 brew install ffmpeg
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Git:
\f1\b0  For cloning the repository.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 On Your iPad:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Safari Browser:
\f1\b0  Pre-installed.\
\ls4\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stable Wi-Fi Connection:
\f1\b0  Must be on the same local network as your Mac Mini.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u9881 \u65039  Setup Instructions\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Follow these steps to get your AI Chatbot up and running.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 1. Clone the Repository (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Open a terminal on your Mac Mini and clone your project repository:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 git clone <your-repository-url>\
cd <your-project-directory> # e.g., cd ai-chatbot-project\
\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 2. Backend Setup (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Navigate to the 
\f2\fs26 backend
\f1\fs24  directory and set up the Python environment:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 cd backend\
python3 -m venv venv\
source venv/bin/activate\
pip install -r requirements.txt\
\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Configure 
\f3\fs26 backend/config.py
\f0\fs24 :
\f1\b0  Open 
\f2\fs26 backend/config.py
\f1\fs24  and ensure the following are correctly set:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 OLLAMA_BASE_URL
\f1\fs24 : Should point to your Ollama server (usually 
\f2\fs26 http://localhost:11434
\f1\fs24 ).\
\ls5\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 OLLAMA_LLM_MODEL
\f1\fs24 : The name of your LLM model (e.g., 
\f2\fs26 "llama2"
\f1\fs24 ).\
\ls5\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 OLLAMA_EMBEDDING_MODEL
\f1\fs24 : The name of your embedding model (e.g., 
\f2\fs26 "nomic-embed-text"
\f1\fs24 ).\
\ls5\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CORS_ORIGINS
\f1\fs24 : For local testing, 
\f2\fs26 "*"
\f1\fs24  is okay, but for any production-like environment, 
\f0\b change this to your Mac Mini's specific IP address and port
\f1\b0  (e.g., 
\f2\fs26 http://192.168.1.100:8000
\f1\fs24 ).\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 3. Frontend Setup (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Navigate to the 
\f2\fs26 frontend
\f1\fs24  directory and install Node.js dependencies:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 cd ../frontend # Go back to the project root, then into frontend\
npm install\
\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Configure 
\f3\fs26 frontend/src/App.js
\f0\fs24 :
\f1\b0  Open 
\f2\fs26 frontend/src/App.js
\f1\fs24  and update the 
\f2\fs26 BACKEND_URL
\f1\fs24  constant:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 // IMPORTANT: Replace YOUR_MAC_MINI_IP with your Mac Mini's actual local IP address.\
// Example: const BACKEND_URL = 'http://192.168.1.100:5000';\
const BACKEND_URL = 'http://YOUR_MAC_MINI_IP:5000';\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 Replace 
\f2\fs26 YOUR_MAC_MINI_IP
\f1\fs24  with the actual local IP address of your Mac Mini (e.g., 
\f2\fs26 192.168.1.100
\f1\fs24 ).\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 Enable PWA in 
\f3\fs26 frontend/src/index.js
\f0\fs24 :
\f1\b0  Open 
\f2\fs26 frontend/src/index.js
\f1\fs24  and change:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 serviceWorkerRegistration.unregister();\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 to:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 serviceWorkerRegistration.register();\
\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Build the React Frontend:
\f1\b0  After making the changes, build the production-ready static files:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 npm run build\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 This will create a 
\f2\fs26 build
\f1\fs24  folder containing your optimized web application.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 4. Start Redis Server (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Open a 
\f0\b new terminal window
\f1\b0  and start the Redis server (required for Celery):\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 redis-server\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 Keep this terminal window open.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 5. Start Celery Workers (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Open a 
\f0\b new terminal window
\f1\b0 , activate your Python virtual environment, and start the Celery worker:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 cd /path/to/your-rag-project/backend # Ensure you are in the backend directory\
source venv/bin/activate\
celery -A app.celery worker -l info -P gevent --concurrency=1 --max-tasks-per-child=1 # gevent for async tasks\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 Keep this terminal window open.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 6. Start Celery Beat (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Open a 
\f0\b new terminal window
\f1\b0 , activate your Python virtual environment, and start Celery Beat (for scheduled tasks like Whoosh index commits):\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 cd /path/to/your-rag-project/backend # Ensure you are in the backend directory\
source venv/bin/activate\
celery -A app.celery beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 Keep this terminal window open.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 7. Start Flask Backend Server (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Open a 
\f0\b new terminal window
\f1\b0 , activate your Python virtual environment, and start the Flask development server:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 cd /path/to/your-rag-project/backend # Ensure you are in the backend directory\
source venv/bin/activate\
python3 app.py\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 Keep this terminal window open.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 8. Serve React Frontend (on Mac Mini)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Open a 
\f0\b new terminal window
\f1\b0  and navigate into the 
\f2\fs26 build
\f1\fs24  directory of your React app. Then, start a simple HTTP server:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 cd /path/to/your-rag-project/frontend/build\
python3 -m http.server 8000 # Use port 8000 to avoid conflict with Flask on 5000\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs24 \cf0 Keep this terminal window open.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u55357 \u56561  Accessing the Chatbot on Your iPad\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Connect to Wi-Fi:
\f1\b0  Ensure your iPad is connected to the 
\f0\b same local Wi-Fi network
\f1\b0  as your Mac Mini.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open Safari:
\f1\b0  Launch the Safari browser on your iPad.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enter URL:
\f1\b0  In the address bar, type your Mac Mini's IP address followed by the frontend server's port (e.g., 
\f2\fs26 http://192.168.1.100:8000
\f1\fs24 ).\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add to Home Screen (Optional PWA):
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Once the chatbot loads, tap the 
\f0\b Share button
\f1\b0  (square with an arrow pointing up) in Safari.\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scroll down and tap 
\f0\b "Add to Home Screen"
\f1\b0 .\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Customize the name (e.g., "AI Chatbot") and tap "Add".\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This creates an app icon on your home screen that launches the chatbot in a full-screen, app-like experience.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u55357 \u56960  Usage\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check Backend Status:
\f1\b0  The frontend will display a status indicator (Connected/Disconnected) for the backend. Ensure it's connected.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Chat Tab:
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls7\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Text Input:
\f1\b0  Type your query in the input field and press "Send".\
\ls7\ilvl1
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Voice Input:
\f1\b0  Tap the "Voice" button, speak your query, and tap "Stop" or wait for silence to finish. The AI will transcribe your speech, process it, and respond verbally and in text.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files Tab:
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls7\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Upload Documents/Videos:
\f1\b0  Use the file input to upload PDFs, text files, or videos. These will be processed by the backend and added to the RAG knowledge base. The chatbot can then answer questions based on their content.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \uc0\u55357 \u57056 \u65039  Future Enhancements (Round 1 Changes)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 While the current design is functional, there are several areas for improvement to enhance robustness, performance, and security. These "Round 1 changes" include:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend Data Integrity:
\f1\b0  Strengthening the commit strategy for the Whoosh index to prevent potential data loss in case of unexpected worker crashes.\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Frontend Resource Management:
\f1\b0  Improving the cleanup of temporary image URLs to prevent potential UI issues and memory leaks.\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security Hardening:
\f1\b0  Implementing stricter CORS policies for production, and enhancing file type validation and scanning for uploaded content.\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Code Refinements:
\f1\b0  Further modularizing components, adding more comprehensive type hinting, and centralizing configuration access.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 These enhancements are planned for future iterations to evolve the project into a more production-ready system.\
Enjoy interacting with your AI Chatbot!\
}