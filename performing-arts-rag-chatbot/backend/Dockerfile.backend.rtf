{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red23\green24\blue24;\red109\green115\blue120;
\red183\green111\blue247;\red99\green159\blue215;\red113\green192\blue131;}
{\*\expandedcolortbl;;\cssrgb\c83137\c83137\c83137;\cssrgb\c11765\c12157\c12549;\cssrgb\c50196\c52549\c54510;
\cssrgb\c77255\c54118\c97647;\cssrgb\c45490\c69020\c87451;\cssrgb\c50588\c78824\c58431;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \cf4 \strokec4 # Use an official Python runtime as a parent image\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 FROM\cf2 \cb3 \strokec2  python:3.9-slim-buster\cb1 \
\
\cb3     \cf4 \strokec4 # Set the working directory in the container\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 WORKDIR\cf2 \cb3 \strokec2  /app\cb1 \
\
\cb3     \cf4 \strokec4 # Install any needed packages specified in requirements.txt\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 COPY\cf2 \cb3 \strokec2  requirements.txt .\cb1 \
\cb3     \cf5 \cb3 \strokec5 RUN\cf2 \cb3 \strokec2  pip install --no-cache-dir -r requirements.txt\cb1 \
\
\cb3     \cf4 \strokec4 # Copy the Flask application code into the container\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 COPY\cf2 \cb3 \strokec2  . .\cb1 \
\
\cb3     \cf4 \strokec4 # Expose port 5000 for the Flask application\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 EXPOSE\cf2 \cb3 \strokec2  5000\cb1 \
\
\cb3     \cf4 \strokec4 # Define environment variables (for production, use Docker secrets or .env file mounted by docker-compose)\cf2 \cb1 \strokec2 \
\cb3     \cf4 \strokec4 # These will be loaded by python-dotenv in app.py\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 ENV\cf2 \cb3 \strokec2  \cf6 \cb3 \strokec6 GOOGLE_API_KEY\cf2 \cb3 \strokec2 =\cf7 \strokec7 "YOUR_GOOGLE_API_KEY"\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 ENV\cf2 \cb3 \strokec2  \cf6 \cb3 \strokec6 PRIMARY_BACKEND_API_KEY\cf2 \cb3 \strokec2 =\cf7 \strokec7 "your_backend_api_key_here"\cf2 \cb1 \strokec2 \
\
\cb3     \cf4 \strokec4 # Command to run the Flask application using Gunicorn (recommended for production)\cf2 \cb1 \strokec2 \
\cb3     \cf4 \strokec4 # Gunicorn provides a more robust and production-ready WSGI server than Flask's built-in server.\cf2 \cb1 \strokec2 \
\cb3     \cf4 \strokec4 # We'll use 4 workers, binding to all interfaces on port 5000.\cf2 \cb1 \strokec2 \
\cb3     \cf5 \cb3 \strokec5 CMD\cf2 \cb3 \strokec2  [\cf7 \strokec7 "gunicorn"\cf2 \strokec2 , \cf7 \strokec7 "--bind"\cf2 \strokec2 , \cf7 \strokec7 "0.0.0.0:5000"\cf2 \strokec2 , \cf7 \strokec7 "app:app"\cf2 \strokec2 ]\cb1 \
\cb3     \cb1 \
}